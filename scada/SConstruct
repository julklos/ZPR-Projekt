import platform, shutil, os

def copyLibBuilder( target, source, env):
   '''kopiuje biblioteke'''
   shutil.copy( str(source[0]), str(target[0]) )
   return

BOOST_CPPPATH = os.environ['BOOST_CPPPATH']
PQXX_CPPPATH = os.environ['PQXX_CPPPATH']
PYTHON_CPPPATH = os.environ['PYTHON_CPPPATH']

BOOST_LIBPATH = os.environ['BOOST_LIBPATH']
PQXX_LIBPATH = os.environ['PQXX_LIBPATH']
PYTHON_LIBPATH = os.environ['PYTHON_LIBPATH']

if(platform.system() == "Linux"):
    VariantDir(BUILD_DIR, SRC_DIR, duplicate=0)
    e = Environment(TARGET_ARCH='x86')

    INCLUDE_DIR = "./include"
    BUILD_DIR = './build/'
    SRC_DIR = "./src"
    sources = [Glob(BUILD_DIR + '*.cpp'),
               Glob(BUILD_DIR + 'utilities\\*.cpp'), 
               Glob(BUILD_DIR + 'controllers\\*.cpp'),
               Glob(BUILD_DIR + 'mappers\\*.cpp'),
               Glob(BUILD_DIR + 'services\\*.cpp')]

    e.Append( CPPFLAGS = '-Wall -pedantic -pthread -Wno-long-long -shared -Wextra' )
    e.Append( LINKFLAGS = '-Wall -pthread' )
    e.Append( CPPPATH = [INCLUDE_DIR,
                         BOOST_CPPPATH,
                         PQXX_CPPPATH,
                         PYTHON_CPPPATH] )


    
    e.Append( LIBPATH = ['.',
                         BOOST_LIBPATH,
                         PQXX_LIBPATH,
                         PYTHON_LIBPATH] )
                         

    e.Append( LIBS = [ 'boost_python36', 
        # 'boost_system', 
    'boost_date_time', 'pqxx' ] )

    target = 'scada.so'

elif(platform.system() == "Windows"):
    e = Environment(TARGET_ARCH='x86')

    e.Append( CPPFLAGS = ' /EHsc /D "WIN32" /D "_WIN32_WINNT#0x501" /D "_CONSOLE" /W4 /MD' )

    INCLUDE_DIR = '.\\include'
    sources = ['src/main.cpp', 'src/controllers/StateController.cpp', 'src/services/StateService.cpp']

    e.Append( CPPPATH = [ INCLUDE_DIR, BOOST_CPPPATH, 
    #PQXX_CPPPATH, 
    PYTHON_CPPPATH ] )
    e.Append( LIBPATH = [ BOOST_LIBPATH, 
    #PQXX_LIBPATH, 
    PYTHON_LIBPATH ] )

    e.Append(LIBS = ['boost_python36-vc141-mt-x32-1_69', 'boost_date_time-vc141-mt-x32-1_69'])

    target = 'libscada.pyd'
    
else:
    print(platform.system() + " not supported")

dll = e.SharedLibrary(target = 'scada', source = sources)
e.Command(target, dll, copyLibBuilder)

"""
#build tests
env_test = e.Clone()

if(platform.system() == "Linux"):
   env_test.Append( LIBS = [ 'scada',  'python3.6m', 'boost_unit_test_framework'] )
   
elif(platform.system() == "Windows"):
   env_test.Prepend( LIBS = 'scada' )

env_test.Program( target = "__tests__/scada_test", source = '__tests__/scada_test.cpp')
"""