import os

BUILD_DIR = "./build"
SRC_DIR = "./src"
INSTALL_DIR = "./install"
INCLUDE_DIR = "./include"
BINARY_NAME = "scada"
python3 = "/usr/include/python3.6"


# create object files in BUILD_DIR directory
VariantDir(BUILD_DIR, SRC_DIR, duplicate=0)
#env = Environment(TARGET_ARCH='x86', CCFLAGS=["-Wall", "-shared", "-Wextra"])
env = Environment()
if env['PLATFORM'] == 'cygwin':
    print('cygwin')
elif env['PLATFORM']=='win32':
    print('windows')
else:
    print('other')
    # collect files for compilation
    env.Append(TARGET_ARCH='x86')
    env.Append(CCFLAGS=["-Wall", "-shared", "-Wextra"])
    sources = [Glob(BUILD_DIR + '/*.cpp'),
            Glob(BUILD_DIR + '/utilities/*.cpp'), 
            Glob(BUILD_DIR + '/controllers/*.cpp'),
            Glob(BUILD_DIR + '/mappers/*.cpp'),
            Glob(BUILD_DIR + '/services/*.cpp')]

    # collect include files
    env.Append(CPPPATH= [
        INCLUDE_DIR,
        'libs/boost',
        'libs/pqxx/install',
        python3
    ])

    # collect compiled libs
    env.Append(LIBPATH = [
        'libs/boost',
        'libs/boost/stage',
        'libs/boost/stage/lib',
        'libs/pqxx/install/lib'
    ])

    # specify libraries
    libs = [
        'boost_python36',
        'boost_date_time',
        'pqxx',
        'pq'
    ]

    # make shared object
    libs = env.SharedLibrary(target="scada", source=sources, LIBS=libs)
    env.Default(libs)